Git commands

git help
Muestra una lista con los comandos más utilizados en GIT.

git init
Podemos ejecutar ese comando para crear localmente un repositorio con GIT y así utilizar todo el funcionamiento que GIT ofrece.  Basta con estar ubicados dentro de la carpeta donde tenemos nuestro proyecto y ejecutar el comando.  Cuando agreguemos archivos y un commit, se va a crear el branch master por defecto.

git add + path
Agrega al repositorio los archivos que indiquemos.

git add -A
Agrega al repositorio TODOS los archivos y carpetas que estén en nuestro proyecto, los cuales GIT no está siguiendo.

git commit -m "mensaje" + archivos
Hace commit a los archivos que indiquemos, de esta manera quedan guardados nuestras modificaciones.

git commit -am "mensaje"
Hace commit de los archivos que han sido modificados y GIT los está siguiendo.

git checkout -b NombreDeBranch
Crea un nuevo branch y automaticamente GIT se cambia al branch creado, clonando el branch desde donde ejecutamos el comando.

git branch
Nos muestra una lista de los branches que existen en nuestro repositorio.

git checkout NombreDeBranch
Sirve para moverse entre branches, en este caso vamos al branch que indicamos en el comando.

git merge NombreDeBranch
Hace un merge entre dos branches, en este caso la dirección del merge sería entre el branch que indiquemos en el comando, y el branch donde estémos ubicados.

git status
Nos indica el estado del repositorio, por ejemplo cuales están modificados, cuales no están siendo seguidos por GIT, entre otras características.

git clone URL/name.git NombreProyecto
Clona un proyecto de git en la carpeta NombreProyecto.

git push origin NombreDeBranch
Luego de que hicimos un git commit, si estamos trabajando remotamente, este comando va a subir los archivos al repositorio remoto, específicamente al branch que indiquemos.

git pull origin NombreDeBranch
Hace una actualización en nuestro branch local, desde un branch remoto que indicamos en el comando.

git init 
Inicializa el repositorio en la carpeta donde estemos ubicados.

git config --local user.email “example@uca”
git config --local user.name “example”
Establece el el usuario que está realizando los cambios.

git config --local --list
git config --global --list
Sirve para desplegar la lista de los valores asignados con los comandos de arriba.
El segundo se debería de usar en su computadora personal para corroborar que el
nombre y su email haya sido ingresado correctamente.

git add . 
Agrega todos los archivos al repositorio.

git commit –m “Un commit” 
Comentar los cambios que hemos hecho.

git clone 
Se usa para copiar un repositorio y trabajar con él en nuestra máquina.

git push -u origin master 
Guardamos nuestros cambios en la nube y los agregamos a la rama principal.

git pull 
Se usa para actualizar nuestro repositorio con los últimos de la nube.

git remote add origin “url del repositorio” 
Añadimos el lugar en la nube donde subiremos el repositorio.

git revert <commit> 
Sirve para revertir un commit usando su ID. Una vez hecho esto hay que hacer “push”
para guardar los cambios.



Imagen
https://upload.wikimedia.org/wikipedia/commons/0/0c/MaskAI.png